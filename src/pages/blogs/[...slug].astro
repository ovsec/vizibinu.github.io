---
import { getCollection, getEntry } from 'astro:content';
import BlogLayout from '../../layouts/BlogLayout.astro';
import { SITE_NAME } from '@lib/constants';
import Avatar from '@components/Avatar.astro';

import dayjs from 'dayjs';
import relativeTime from 'dayjs/plugin/relativeTime';

dayjs.extend(relativeTime)


// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection('blogs');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();
const relatedBlogs = await getCollection('blogs',(e) => {
  
  let listOfslugs = entry.data?.relatedBlogs?.map((e: { slug: string; }) => e.slug)

  return e.data.draft !== true && listOfslugs && (listOfslugs.includes(e.slug));
})
//console.log(relatedBlogs)

const author = entry.data.author ? await getEntry('authors', entry.data.author.id) : null;

---
<BlogLayout 
  title={`${entry.data.title} - ${SITE_NAME}`} 
  description={`${entry.data?.description} - ${SITE_NAME}`} 
  keywords={entry.data?.tags}
  author={entry.data?.author} 
  relatedBlogs={relatedBlogs}
>
    
      <div class="mx-auto" slot="header">
        <div>
          {entry.data.image ? <img src={entry.data.image.src} alt={entry.data.title} class="h-[150px] w-full">: null}
          <h1>{entry.data.title}</h1>
          
        </div>
        <div class="flex flex-row items-center gap-2 my-2" >
          <Avatar image={author?.data?.image} />
          
          <div>
            <div>{author?.data?.name}</div>
            <time>{dayjs(entry.data.publishDate).fromNow()}</time>
          </div>
        </div>
      </div>
      
    <div>
      <Content />
    </div>
</BlogLayout>